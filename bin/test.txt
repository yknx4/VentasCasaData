{ filename: 'sales.db',
  collections: [],
  databaseVersion: 1.1,
  engineVersion: 1.1,
  autosave: true,
  autosaveInterval: 1000,
  autosaveHandle: 
   { _idleTimeout: 1000,
     _idlePrev: 
      { '0': [Function: listOnTimeout],
        _idleNext: [Circular],
        _idlePrev: [Circular],
        msecs: 1000 },
     _idleNext: 
      { '0': [Function: listOnTimeout],
        _idleNext: [Circular],
        _idlePrev: [Circular],
        msecs: 1000 },
     _idleStart: 38297829,
     _onTimeout: [Function: wrapper],
     _repeat: true },
  getters: { indexedAdapter: [Getter] },
  options: { autosave: true, autosaveInterval: 1000 },
  persistenceMethod: 'fs',
  persistenceAdapter: 
   { fs: 
      { Stats: [Function],
        F_OK: 0,
        R_OK: 4,
        W_OK: 2,
        X_OK: 1,
        access: [Function],
        accessSync: [Function],
        exists: [Function],
        existsSync: [Function],
        readFile: [Function],
        readFileSync: [Function],
        close: [Function],
        closeSync: [Function],
        open: [Function],
        openSync: [Function],
        read: [Function],
        readSync: [Function],
        write: [Function],
        writeSync: [Function],
        rename: [Function],
        renameSync: [Function],
        truncate: [Function],
        truncateSync: [Function],
        ftruncate: [Function],
        ftruncateSync: [Function],
        rmdir: [Function],
        rmdirSync: [Function],
        fdatasync: [Function],
        fdatasyncSync: [Function],
        fsync: [Function],
        fsyncSync: [Function],
        mkdir: [Function],
        mkdirSync: [Function],
        readdir: [Function],
        readdirSync: [Function],
        fstat: [Function],
        lstat: [Function],
        stat: [Function],
        fstatSync: [Function],
        lstatSync: [Function],
        statSync: [Function],
        readlink: [Function],
        readlinkSync: [Function],
        symlink: [Function],
        symlinkSync: [Function],
        link: [Function],
        linkSync: [Function],
        unlink: [Function],
        unlinkSync: [Function],
        fchmod: [Function],
        fchmodSync: [Function],
        chmod: [Function],
        chmodSync: [Function],
        fchown: [Function],
        fchownSync: [Function],
        chown: [Function],
        chownSync: [Function],
        _toUnixTimestamp: [Function: toUnixTimestamp],
        utimes: [Function],
        utimesSync: [Function],
        futimes: [Function],
        futimesSync: [Function],
        writeFile: [Function],
        writeFileSync: [Function],
        appendFile: [Function],
        appendFileSync: [Function],
        watch: [Function],
        watchFile: [Function],
        unwatchFile: [Function],
        realpathSync: [Function: realpathSync],
        realpath: [Function: realpath],
        createReadStream: [Function],
        ReadStream: [Object],
        FileReadStream: [Object],
        createWriteStream: [Function],
        WriteStream: [Object],
        FileWriteStream: [Object],
        SyncWriteStream: [Object] } },
  events: 
   { init: [ [Function] ],
     flushChanges: [],
     close: [],
     changes: [],
     warning: [] },
  ENV: 'NODEJS' }
Listening on port 3000
string
object
string
object
string
object
string
object
string
object
string
object
string
object
{ filename: 'sales.db',
  collections: [],
  databaseVersion: 1.1,
  engineVersion: 1.1,
  autosave: true,
  autosaveInterval: 1000,
  autosaveHandle: 
   { _idleTimeout: 1000,
     _idlePrev: 
      { '0': [Function: listOnTimeout],
        _idleNext: [Circular],
        _idlePrev: [Circular],
        msecs: 1000 },
     _idleNext: 
      { '0': [Function: listOnTimeout],
        _idleNext: [Circular],
        _idlePrev: [Circular],
        msecs: 1000 },
     _idleStart: 38408364,
     _onTimeout: [Function: wrapper],
     _repeat: true },
  getters: { indexedAdapter: [Getter] },
  options: { autosave: true, autosaveInterval: 1000 },
  persistenceMethod: 'fs',
  persistenceAdapter: 
   { fs: 
      { Stats: [Function],
        F_OK: 0,
        R_OK: 4,
        W_OK: 2,
        X_OK: 1,
        access: [Function],
        accessSync: [Function],
        exists: [Function],
        existsSync: [Function],
        readFile: [Function],
        readFileSync: [Function],
        close: [Function],
        closeSync: [Function],
        open: [Function],
        openSync: [Function],
        read: [Function],
        readSync: [Function],
        write: [Function],
        writeSync: [Function],
        rename: [Function],
        renameSync: [Function],
        truncate: [Function],
        truncateSync: [Function],
        ftruncate: [Function],
        ftruncateSync: [Function],
        rmdir: [Function],
        rmdirSync: [Function],
        fdatasync: [Function],
        fdatasyncSync: [Function],
        fsync: [Function],
        fsyncSync: [Function],
        mkdir: [Function],
        mkdirSync: [Function],
        readdir: [Function],
        readdirSync: [Function],
        fstat: [Function],
        lstat: [Function],
        stat: [Function],
        fstatSync: [Function],
        lstatSync: [Function],
        statSync: [Function],
        readlink: [Function],
        readlinkSync: [Function],
        symlink: [Function],
        symlinkSync: [Function],
        link: [Function],
        linkSync: [Function],
        unlink: [Function],
        unlinkSync: [Function],
        fchmod: [Function],
        fchmodSync: [Function],
        chmod: [Function],
        chmodSync: [Function],
        fchown: [Function],
        fchownSync: [Function],
        chown: [Function],
        chownSync: [Function],
        _toUnixTimestamp: [Function: toUnixTimestamp],
        utimes: [Function],
        utimesSync: [Function],
        futimes: [Function],
        futimesSync: [Function],
        writeFile: [Function],
        writeFileSync: [Function],
        appendFile: [Function],
        appendFileSync: [Function],
        watch: [Function],
        watchFile: [Function],
        unwatchFile: [Function],
        realpathSync: [Function: realpathSync],
        realpath: [Function: realpath],
        createReadStream: [Function],
        ReadStream: [Object],
        FileReadStream: [Object],
        createWriteStream: [Function],
        WriteStream: [Object],
        FileWriteStream: [Object],
        SyncWriteStream: [Object] } },
  events: 
   { init: [ [Function] ],
     flushChanges: [],
     close: [],
     changes: [],
     warning: [] },
  ENV: 'NODEJS' }
Listening on port 3000
